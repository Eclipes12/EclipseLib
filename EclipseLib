-- EclipseLib: Core Library
local EclipseLib = {}

-- Services
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local PlayerGui = Players.LocalPlayer:WaitForChild("PlayerGui")

-- Window Creation
function EclipseLib:MakeWindow(options)
    options = options or {}

    -- Create the main UI components
    local ScreenGui = Instance.new("ScreenGui", PlayerGui)
    ScreenGui.Name = options.Name or "EclipseLib"
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local MainFrame = Instance.new("Frame", ScreenGui)
    MainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    MainFrame.Size = UDim2.new(0, 500, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.ClipsDescendants = true
    MainFrame.Draggable = true
    MainFrame.Active = true

    local TopBar = Instance.new("Frame", MainFrame)
    TopBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TopBar.Size = UDim2.new(1, 0, 0, 40)

    local Title = Instance.new("TextLabel", TopBar)
    Title.Size = UDim2.new(1, -40, 1, 0)
    Title.Font = Enum.Font.SourceSansBold
    Title.Text = options.Name or "EclipseLib"
    Title.TextSize = 20
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1

    local CloseButton = Instance.new("TextButton", TopBar)
    CloseButton.Size = UDim2.new(0, 40, 1, 0)
    CloseButton.Position = UDim2.new(1, -40, 0, 0)
    CloseButton.Text = "X"
    CloseButton.Font = Enum.Font.SourceSansBold
    CloseButton.TextSize = 20
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)

    CloseButton.MouseButton1Click:Connect(function()
        if options.CloseCallback then
            options.CloseCallback()
        end
        ScreenGui:Destroy()
    end)

    local TabContainer = Instance.new("Frame", MainFrame)
    TabContainer.Size = UDim2.new(0, 120, 1, -40)
    TabContainer.Position = UDim2.new(0, 0, 0, 40)
    TabContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

    local ContentFrame = Instance.new("Frame", MainFrame)
    ContentFrame.Size = UDim2.new(1, -120, 1, -40)
    ContentFrame.Position = UDim2.new(0, 120, 0, 40)
    ContentFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    ContentFrame.ClipsDescendants = true

    -- Return window object
    local Window = {
        MainFrame = MainFrame,
        TabContainer = TabContainer,
        ContentFrame = ContentFrame,
        Tabs = {}
    }
    setmetatable(Window, { __index = EclipseLib })
    return Window
end

-- Tab Creation
function EclipseLib:MakeTab(options)
    options = options or {}

    local TabButton = Instance.new("TextButton", self.TabContainer)
    TabButton.Size = UDim2.new(1, 0, 0, 40)
    TabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    TabButton.Text = options.Name or "Tab"
    TabButton.Font = Enum.Font.SourceSansBold
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabButton.TextSize = 18

    local TabContent = Instance.new("ScrollingFrame", self.ContentFrame)
    TabContent.Visible = false
    TabContent.Size = UDim2.new(1, 0, 1, 0)
    TabContent.BackgroundTransparency = 1
    TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)

    local Layout = Instance.new("UIListLayout", TabContent)
    Layout.Padding = UDim.new(0, 10)
    Layout.FillDirection = Enum.FillDirection.Vertical

    -- Tab switching
    TabButton.MouseButton1Click:Connect(function()
        for _, tab in ipairs(self.Tabs) do
            tab.Content.Visible = false
            tab.Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        end
        TabContent.Visible = true
        TabButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    end)

    -- Add tab to the window
    local Tab = {
        Button = TabButton,
        Content = TabContent,
        Elements = {}
    }
    table.insert(self.Tabs, Tab)
    setmetatable(Tab, { __index = EclipseLib })
    return Tab
end

-- Button Creation
function EclipseLib:AddButton(options)
    options = options or {}

    local Button = Instance.new("TextButton", self.Content)
    Button.Size = UDim2.new(0, 200, 0, 40)
    Button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    Button.Text = options.Name or "Button"
    Button.Font = Enum.Font.SourceSansBold
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.TextSize = 18

    Button.MouseButton1Click:Connect(function()
        if options.Callback then
            options.Callback()
        end
    end)

    -- Adjust canvas size
    self.Content.CanvasSize = UDim2.new(0, 0, 0, self.Content.UIListLayout.AbsoluteContentSize.Y)
    table.insert(self.Elements, Button)
end

return EclipseLib
